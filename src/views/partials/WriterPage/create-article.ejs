<div class="grid grid-cols-[7fr_3fr] max-w-[90rem] mx-auto px-4 sm:px-6 lg:px-8 py-6 relative space-x-6">
    <div>
        <form method="POST" action="/my-articles/create" enctype="multipart/form-data" class="space-y-6"
            id="articleForm">
            <!-- Title -->
            <div class="mb-4">
                <label for="name" class="block text-xl font-medium text-gray-700">Tên bài viết</label>
                <input type="text" id="name" name="name" required value="<%= article.name %>"
                    class="mt-1 py-3 px-2 block w-full text-xl bg-[#F5F5F5] rounded-md focus:outline-none focus:ring-0">
            </div>

            <div id="upload-container"
                class="relative mt-4 flex flex-col items-center justify-center w-full h-[200px] rounded-lg cursor-pointer bg-[#F5F5F5] hover:bg-[#f0f0f0] transition-colors border-2 border-dashed border-gray-300">

                <input type="file" id="file-input" name="image" class="hidden" accept="image/*">

                <div id="placeholder" class="flex flex-col items-center gap-2 text-gray-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8" viewBox="0 0 24 24" fill="none"
                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path
                            d="M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z" />
                        <circle cx="12" cy="13" r="3" />
                    </svg>
                    <span class="text-lg">Thêm ảnh đại diện bài viết</span>
                </div>

                <!-- Adjusted the image styling -->
                <img id="preview" class="absolute inset-0 w-full h-full object-contain rounded-lg hidden">
            </div>

            <!-- Content (TinyMCE Editor) -->
            <div class="mb-4">
                <label for="editor" class="block text-xl font-medium text-gray-700">Nội dung</label>
                <textarea id="editor" name="content" class="mt-2 bg-white border border-gray-600 rounded-md"
                    style="height: 300px;"></textarea>
            </div>

            <!-- Abstract -->
            <div class="mb-4">
                <label for="abstract" class="block text-xl font-medium text-gray-700">Tóm tắt</label>
                <textarea id="abstract" name="abstract" rows="3" required
                    class="mt-1 py-3 px-2 block w-full text-xl bg-[#F5F5F5] rounded-md focus:outline-none focus:ring-0"><%= article.abstract %></textarea>
            </div>

            <!-- Premium Article -->
            <div class="mb-4 flex items-center">
                <input type="checkbox" id="premium" name="isPremium" value="1" <%=article.isPremium ? 'checked' : '' %>
                class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded">
                <label for="premium" class="ml-2 text-sm text-gray-700">Premium Article</label>
            </div>

            <input type="hidden" name="tags" id="tagsInput">
            <input type="hidden" name="category" id="categoriesInput">
        </form>
    </div>
    <div class="rounded-xl h-[20rem] space-y-4">
        <div class="author-info p-4 flex flex-row space-x-4 h-[7rem] bg-[#F5F5F5]">
            <div class="flex items-center gap-4">
                <img src="/images/default-ava.png" alt="" class="w-20 h-20 rounded-xl">
            </div>
            <div class="flex flex-row space-x-3">
                <div class="flex flex-col space-y-4 justify-center">
                    <a href="/user/<%= user.name %>"
                        class="text-lg font-semibold hover:text-blue-600 transition-colors">
                        <%= user.name %>
                    </a>
                    <span class="text-sm text-gray-500">
                        <%= articleCount.data.articles.length %> bài viết
                    </span>
                </div>
            </div>
        </div>
        <div class="max-w-4xl mx-auto rounded-xl shadow-sm p-6 h-auto bg-[#F5F5F5]">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                <!-- Tags Section -->
                <div>
                    <div class="flex items-center gap-2 mb-4">
                        <div class="w-1 h-4 bg-red-500"></div>
                        <h2 class="text-lg font-medium">Nhãn</h2>
                        <button onclick="toggleList('tagList')"
                            class="ml-auto w-6 h-6 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-100">
                            <span class="text-gray-600">+</span>
                        </button>
                    </div>
                    <div id="tagList" class="hidden flex flex-wrap gap-2">
                        <% tags.forEach(tag=> { %>
                            <button
                                onclick="selectItem('tagsInput', '<%= tag._id %>', 'selectedTags', '#<%= tag.name %>')"
                                class="px-3 py-1 bg-gray-200 rounded-lg hover:bg-gray-300 text-sm">
                                #<%= tag.name %>
                            </button>
                            <% }); %>
                    </div>
                    <div id="selectedTags" class="mt-4 flex flex-wrap gap-2">
                        <!-- Selected tags will be shown here -->
                    </div>
                </div>


                <!-- Categories Section -->
                <div>
                    <div class="flex items-center gap-2 mb-4">
                        <div class="w-1 h-4 bg-red-500"></div>
                        <h2 class="text-lg font-medium">Chuyên Mục</h2>
                        <button onclick="toggleList('categoryList')"
                            class="ml-auto w-6 h-6 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-100">
                            <span class="text-gray-600">+</span>
                        </button>
                    </div>
                    <div id="categoryList" class="hidden flex flex-wrap gap-2">
                        <% categories.forEach(category=> { %>
                            <button
                                onclick="selectItem('categoriesInput', '<%= category._id %>', 'selectedCategories', '<%= category.name %>')"
                                class="px-3 py-1 bg-gray-200 rounded-lg hover:bg-gray-300 text-sm">
                                <%= category.name %>
                            </button>
                            <% }); %>
                    </div>
                    <div id="selectedCategories" class="mt-4 flex flex-wrap gap-2">
                        <!-- Selected categories will be shown here -->
                    </div>
                </div>

            </div>
        </div>
        <!-- Create Button -->
        <div class="flex items-center justify-center mt-6 w-full">
            <button type="submit" form="articleForm"
                class="bg-cyan-600 hover:bg-cyan-700 text-white text-xl py-2 px-4 rounded-md shadow-sm focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 w-full">
                Đăng Bài
            </button>
        </div>
    </div>

</div>

<!-- TinyMCE CSS -->
<script
    src="https://cdn.tiny.cloud/1/fitaf2bz3rvadtw7hbv673d3l9xs64dlcith8cjds35dcufs/tinymce/5/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: '#editor',
        plugins: 'link image code',
        toolbar: 'undo redo | formatselect | bold italic | link image | code',
        height: 300,
        setup: function (editor) {
            editor.on('change', function () {
                document.getElementById('content').value = editor.getContent();
            });
        }
    });

    console.log('content:', <% - JSON.stringify(article.content) %>);

    <% if (article.content) { %>
        tinymce.get('editor').setContent(<% - article.content %>);
    <% } %>

        document.querySelector('form').onsubmit = function () {
            document.querySelector('#content').value = tinymce.get('editor').getContent();
            alert('Submitting form with content:', document.querySelector('#content').value);
            return true;
        };
</script>

<script>
    const uploadContainer = document.getElementById('upload-container');
    const fileInput = document.getElementById('file-input');
    const placeholder = document.getElementById('placeholder');
    const preview = document.getElementById('preview');
    let uploadedImageUrl = '';  // Variable to store the uploaded image URL

    // Handle click to upload
    uploadContainer.addEventListener('click', () => {
        fileInput.click();
    });

    // Handle drag and drop
    uploadContainer.addEventListener('dragover', (e) => {
        e.preventDefault();
        uploadContainer.classList.add('border-gray-500', 'bg-gray-100');
    });

    uploadContainer.addEventListener('dragleave', (e) => {
        e.preventDefault();
        uploadContainer.classList.remove('border-gray-500', 'bg-gray-100');
    });

    uploadContainer.addEventListener('drop', (e) => {
        e.preventDefault();
        uploadContainer.classList.remove('border-gray-500', 'bg-gray-100');
        const file = e.dataTransfer.files[0];
        if (file && file.type.startsWith('image')) {
            previewFile(file);
            uploadImage(file);  // Upload the image after selection
        }
    });

    // Handle file selection
    fileInput.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file && file.type.startsWith('image')) {
            previewFile(file);
            uploadImage(file);  // Upload the image after selection
        }
    });

    function previewFile(file) {
        const reader = new FileReader();
        reader.onloadend = () => {
            placeholder.classList.add('hidden');
            preview.classList.remove('hidden');
            preview.src = reader.result;
        };
        reader.readAsDataURL(file);
    }

    // Upload image to the server
    function uploadImage(file) {
        const formData = new FormData();
        formData.append('image', file);

        // Make a request to the backend to upload the image
        fetch('/upload-image', {  // You need to set up an endpoint on your server to handle this
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success && data.imageUrl) {
                    uploadedImageUrl = data.imageUrl;  // Store the image URL returned from the server
                    console.log('Image uploaded successfully:', uploadedImageUrl);
                } else {
                    console.error('Image upload failed');
                }
            })
            .catch(error => {
                console.error('Error uploading image:', error);
            });
    }

    // Add the uploaded image URL to the form before submitting
    document.querySelector('form').onsubmit = function () {
        // Add the image URL to the hidden field or another form field
        const imageUrlField = document.createElement('input');
        imageUrlField.type = 'hidden';
        imageUrlField.name = 'imageUrl';
        imageUrlField.value = uploadedImageUrl;
        document.querySelector('form').appendChild(imageUrlField);

        // Proceed with form submission
        return true;
    };

</script>
<script>
    // Function to toggle the visibility of tag or category list
    function toggleList(id) {
        const list = document.getElementById(id);
        list.classList.toggle('hidden');
    }

    // Function to select an item (tag or category)
    function selectItem(inputId, value, selectedContainerId, displayText) {
        // Get the input element and current values
        const inputElement = document.getElementById(inputId);
        let currentValues = inputElement.value ? inputElement.value.split(',') : [];

        // Avoid duplicates
        if (!currentValues.includes(value)) {
            currentValues.push(value);
            inputElement.value = currentValues.join(',');

            // Add the selected item visually
            const selectedContainer = document.getElementById(selectedContainerId);
            const item = document.createElement('span');
            item.className = 'px-3 py-1 bg-blue-200 rounded-lg text-sm inline-flex items-center mr-2 mb-2';

            // Create the text content for the selected item
            const text = document.createElement('span');
            text.textContent = displayText;

            // Create a remove button
            const removeBtn = document.createElement('button');
            removeBtn.textContent = '×';
            removeBtn.className = 'ml-2 text-red-600 hover:text-red-800 text-lg';
            removeBtn.onclick = function () {
                // Remove the item
                item.remove();
                // Remove the item from the input value
                currentValues = currentValues.filter(val => val !== value);
                inputElement.value = currentValues.join(',');
            };

            item.appendChild(text);
            item.appendChild(removeBtn);
            selectedContainer.appendChild(item);
        }
        // Close the list after selection
        const listId = inputId === 'tagsInput' ? 'tagList' : 'categoryList';
        document.getElementById(listId).classList.add('hidden');
    }


    // Function to remove an item from the selected list
    function removeItem(inputId, itemId, itemElement) {
        const inputField = document.getElementById(inputId);

        // Update the input field values
        let currentValues = inputField.value.split(',');
        currentValues = currentValues.filter(value => value !== itemId);
        inputField.value = currentValues.join(',');

        // Remove the item from the display section
        itemElement.remove();
    }
    document.querySelector('form').onsubmit = function () {
        // You can add other form validations or operations here if needed
        console.log('Submitting form with tags:', document.getElementById('tagsInput').value);
        console.log('Submitting form with categories:', document.getElementById('categoriesInput').value);
        return true;  // Proceed with form submission
    };

</script>