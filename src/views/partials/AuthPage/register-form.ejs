<div class="min-h-screen flex items-center justify-center bg-cover bg-center bg-no-repeat"
  style="background-image: url('/images/login-bg.png')">
  <div
    class="bg-white/90 px-8 pt-6 pb-20 rounded-lg shadow-lg w-full max-w-xs sm:max-w-md md:max-w-3xl flex flex-col justify-between h-[40rem] md:h-[35rem]">
    <!-- Stepper -->
    <div class="flex justify-center mb-4 md:mb-8">
      <div class="flex items-center">
        <% const currentStep=step || 1 %>
          <% for(let i=1; i <=3; i++) { %>
            <div class="flex items-center">
              <div
                class="<%= currentStep === i ? 'bg-blue-500 text-white' : currentStep > i ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700' %> rounded-full h-8 w-8 md:h-10 md:w-10 flex items-center justify-center font-semibold transition-colors text-sm md:text-base">
                <%= i %>
              </div>
              <% if(i < 3) { %>
                <div class="w-8 md:w-16 h-1 <%= currentStep > i ? 'bg-blue-500' : 'bg-gray-200' %> transition-colors">
                </div>
                <% } %>
            </div>
            <% } %>
      </div>
    </div>

    <form id="registerForm" method="POST" action="#" class="space-y-6">
      <!-- Step 1: Role Selection -->
      <% if(currentStep===1) { %>
        <div class="space-y-4">
          <h2 class="text-2xl md:text-3xl font-bold">Vai Trò</h2>
          <div class="flex flex-col md:flex-row justify-between space-y-4 md:space-y-0 md:space-x-4">
            <div class="w-full md:w-auto">
              <input type="radio" name="role" value="subscriber" required class="hidden peer/subscriber"
                id="subscriber" />
              <label for="subscriber"
                class="block w-full p-4 md:p-8 border-2 border-black rounded-lg cursor-pointer transition-all duration-200 hover:border-blue-400 peer-checked/subscriber:border-blue-600 peer-checked/subscriber:bg-blue-200">
                <div class="flex items-center justify-center">
                  <img src="/images/subscriber.png" alt="" class="w-16 h-16 md:w-24 md:h-24" />
                </div>
              </label>
              <span class="block text-base md:text-lg font-medium text-center mt-2">Đọc giả</span>
            </div>

            <!-- Phong vien card -->
            <div class="w-full md:w-auto">
              <input type="radio" name="role" value="author" required class="hidden peer/writer" id="author" />
              <label for="author"
                class="block w-full p-4 md:p-8 border-2 border-black rounded-lg cursor-pointer transition-all duration-200 hover:border-blue-400 peer-checked/writer:border-blue-600 peer-checked/writer:bg-blue-200">
                <div class="flex items-center justify-center">
                  <img src="/images/writer.png" alt="" class="w-16 h-16 md:w-24 md:h-24" />
                </div>
              </label>
              <span class="block text-base md:text-lg font-medium text-center mt-2">Phóng viên</span>
            </div>

            <!-- Bien tap vien card -->
            <div class="w-full md:w-auto">
              <input type="radio" name="role" value="editor" required class="hidden peer/editor" id="editor" />
              <label for="editor"
                class="block w-full p-4 md:p-8 border-2 border-black rounded-lg cursor-pointer transition-all duration-200 hover:border-blue-400 peer-checked/editor:border-blue-600 peer-checked/editor:bg-blue-200">
                <div class="flex items-center justify-center">
                  <img src="/images/editor.png" alt="" class="w-16 h-16 md:w-24 md:h-24" />
                </div>
              </label>
              <span class="block text-base md:text-lg font-medium text-center mt-2">Biên tập viên</span>
            </div>
          </div>
        </div>

        <!-- Step 2: Personal Information -->
        <% } else if(currentStep===2) { %>
          <div class="space-y-4">
            <h2 class="text-2xl md:text-3xl font-bold">Thông tin cá nhân</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
              <div class="space-y-2">
                <label for="fullName" class="block text-sm md:text-base font-medium text-gray-700">
                  Họ và tên <span class="text-red-500">*</span>
                </label>
                <input type="text" id="name" name="fullName" required
                  class="w-full px-3 py-2 text-sm md:text-base border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
              </div>

              <div class="space-y-2">
                <label for="dob" class="block text-sm md:text-base font-medium text-gray-700">
                  Ngày sinh <span class="text-red-500">*</span>
                </label>
                <input type="date" id="dob" name="dob" required
                  class="w-full px-3 py-2 text-sm md:text-base border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
              </div>

              <div class="space-y-2">
                <label for="phone" class="block text-sm md:text-base font-medium text-gray-700">
                  Số điện thoại <span class="text-red-500">*</span>
                </label>
                <input type="tel" id="phone" name="phone" required
                  class="w-full px-3 py-2 text-sm md:text-base border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
              </div>

              <div class="space-y-2">
                <label for="gender" class="block text-sm md:text-base font-medium text-gray-700">
                  Giới tính <span class="text-red-500">*</span>
                </label>
                <select id="gender" name="gender" required
                  class="w-full px-3 py-2 text-sm md:text-base border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                  <option value="">Chọn giới tính</option>
                  <option value="male">Nam</option>
                  <option value="female">Nữ</option>
                </select>
              </div>

              <div class="space-y-2">
                <label for="nationality" class="block text-sm md:text-base font-medium text-gray-700">
                  Quốc tịch <span class="text-red-500">*</span>
                </label>
                <select id="nationality" name="country" required
                  class="w-full px-3 py-2 text-sm md:text-base border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                  <option value="">Chọn quốc tịch</option>
                  <option value="VN">Việt Nam</option>
                  <option value="US">Hoa Kỳ</option>
                  <option value="UK">Anh</option>
                  <option value="JP">Nhật Bản</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Step 3: Special Requirements -->
          <% } else { %>
            <!-- Step 3: Confirmation -->
            <div class="space-y-4">
              <h2 class="text-3xl font-bold">Xác nhận thông tin</h2>

              <!-- Display Role -->
              <p>
                <strong>Vai trò:</strong>
                <%= role==="subscriber" ? "Đọc giả" : role==="author" ? "Phóng viên" : "Biên tập viên" %>
              </p>

              <!-- Display Form Data -->
              <ul class="mt-4">
                <% const vietnameseKeys={ fullName: 'Tên' , dob: 'Ngày sinh' , phone: 'Số điện thoại' ,
                  gender: 'Giới tính' , country: 'Quốc tịch' }; %>

                  <% Object.keys(step2Data).forEach((key)=> {
                    if (vietnameseKeys.hasOwnProperty(key)) { %>
                    <li><strong>
                        <%= vietnameseKeys[key] %>:
                      </strong>
                      <%= step2Data[key] %>
                    </li>
                    <% } }); %>
              </ul>

              <!-- Additional Fields for Author Role -->
              <% if (role==="author" ) { %>
                <div class="mt-6 space-y-2">
                  <label for="penName" class="block text-sm font-medium text-gray-700">
                    Bút danh <span class="text-red-500">*</span>
                  </label>
                  <input type="text" id="penName" name="penName" required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
                </div>
                <% } else if (role==="editor" ) { %>
                  <div class="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                    <p class="text-blue-700">
                      Bạn cần quản trị viên phê duyệt để trở thành biên tập viên.
                    </p>
                  </div>
                  <% } else if (role==="subscriber" ) { %>
                    <div class="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                      <p class="text-yellow-700">Tài khoản sẽ hết hạn sau 7 ngày.</p>
                    </div>
                    <% } %>
            </div>
            <% } %>
    </form>

    <!-- Navigation -->
    <div class="flex flex-row items-end justify-end space-x-2 md:space-x-3 mt-6 md:mt-0">
      <% if (currentStep> 1) { %>
        <button data-step="<%= currentStep %>"
          class="px-4 md:px-6 py-1.5 md:py-2 text-sm md:text-base bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors back-button">
          Quay lại
        </button>
        <% } %>

          <% if (currentStep < 3) { %>
            <button data-step="<%= currentStep %>"
              class="px-4 md:px-6 py-1.5 md:py-2 text-sm md:text-base bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors continue-button">
              Tiếp tục
            </button>
            <% } else { %>
              <button type="submit" form="registerForm"
                class="px-4 md:px-6 py-1.5 md:py-2 text-sm md:text-base bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors register-button">
                Đăng ký
              </button>
              <% } %>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("registerForm");

    // Back button handler
    const backButton = document.querySelector(".back-button");
    if (backButton) {
      backButton.addEventListener("click", async (e) => {
        e.preventDefault();
        const step = parseInt(backButton.dataset.step);
        await goBack(step);
      });
    }

    // Continue button handler
    const continueButton = document.querySelector(".continue-button");
    if (continueButton) {
      continueButton.addEventListener("click", async (e) => {
        e.preventDefault();
        const step = parseInt(continueButton.dataset.step);
        await validateAndProceed(step);
      });
    }

    // Register button handler
    const registerButton = document.querySelector(".register-button");
    if (registerButton) {
      registerButton.addEventListener("click", async (e) => {
        e.preventDefault();
        await handleRegister();
      });
    }
  });

  // Modify the validateAndProceed function to handle the event properly
  async function validateAndProceed(step) {
    const form = document.getElementById("registerForm");

    if (step === 1) {
      const selectedRole = document.querySelector('input[name="role"]:checked');
      if (!selectedRole) {
        alert("Vui lòng chọn vai trò");
        return false;
      }

      try {
        const response = await fetch("/register-form", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ step: 2, role: selectedRole.value, formData: {} }),
        });

        if (response.ok) {
          window.location.href = "/register-form";
          return true;
        } else {
          const errorText = await response.text();
          alert(`Đã có lỗi xảy ra: ${errorText}`);
          return false;
        }
      } catch (error) {
        console.error("Step 1 - Fetch error:", error);
        alert("Đã có lỗi xảy ra. Vui lòng thử lại.");
        return false;
      }
    }

    if (step === 2) {
      if (!form.checkValidity()) {
        form.reportValidity();
        return false;
      }

      const formData = Object.fromEntries(new FormData(form).entries());

      try {
        const response = await fetch("/register-form", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            step: 3,
            role: "<%= role %>",
            formData,
          }),
        });

        if (response.ok) {
          window.location.href = "/register-form";
          return true;
        } else {
          const errorText = await response.text();
          alert(`Đã có lỗi xảy ra: ${errorText}`);
          return false;
        }
      } catch (error) {
        console.error("Step 2 - Fetch error:", error);
        alert("Đã có lỗi xảy ra. Vui lòng thử lại.");
        return false;
      }
    }

    return false;
  }

  const goBack = async (step) => {
    try {
      const response = await fetch("/register-form", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ step: step - 1 }),
      });

      if (response.ok) {
        window.location.href = "/register-form";
      } else {
        const errorText = await response.text();
        alert(`Đã có lỗi xảy ra: ${errorText}`);
      }
    } catch (error) {
      console.error("Go back - Fetch error:", error);
      alert("Đã có lỗi xảy ra. Vui lòng thử lại.");
    }
  };

  const handleRegister = async () => {
    const form = document.getElementById("registerForm");

    if (!form.checkValidity()) {
      form.reportValidity();
      return false;
    }

    const formData = Object.fromEntries(new FormData(form).entries());

    try {
      const response = await fetch("register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
        redirect: "follow",
      });

      if (response.ok) {
        const res = await fetch("/auth/login");
        if (res.ok) {
          window.location.href = "/auth/login";
        } else {
          const errorText = await response.text();
          alert(`Đã có lỗi xảy ra: ${errorText}`);
        }
      } else {
        const errorText = await response.text();
        alert(`Đã có lỗi xảy ra: ${errorText}`);
      }
    } catch (error) {
      console.error("Register - Fetch error:", error);
      alert("Đã có lỗi xảy ra. Vui lòng thử lại.");
    }
  };

  // Modify the button click handler in your HTML
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("registerForm");

    // Add click handlers for the navigation buttons
    const buttons = document.querySelectorAll('button[onclick^="return"]');
    buttons.forEach((button) => {
      button.onclick = async (e) => {
        e.preventDefault(); // Prevent default button behavior
        const step = parseInt(button.getAttribute("onclick").match(/\d+/)[0]);

        if (button.textContent.trim() === "Quay lại") {
          await goBack(step);
        } else {
          await validateAndProceed(step);
        }
      };
    });
  });
</script>