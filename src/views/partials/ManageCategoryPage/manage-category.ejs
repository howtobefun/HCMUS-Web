<div class="p-6">
  <div class="mb-6">
    <h1 class="text-xl font-semibold">Quản lý chuyên mục</h1>

    <!-- Form thêm category mới -->
    <form id="addCategoryForm" class="mt-4 flex gap-2">
      <input
        type="text"
        id="categoryName"
        name="name"
        placeholder="Nhập tên chuyên mục mới"
        class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
        required
      />
      <button
        type="submit"
        class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500"
      >
        Thêm chuyên mục
      </button>
    </form>
  </div>

  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
    <% categories.forEach(category => { %> <% if (category.name === 'Other') {
    %>
    <div class="category-card" data-category-id="<%= category._id %>">
      <!-- Category Card -->
      <div
        class="relative rounded-lg overflow-hidden bg-gradient-to-r from-orange-400 to-pink-500"
      >
        <img
          src="<%= category.image || 'https://png.pngtree.com/thumb_back/fw800/background/20231010/pngtree-vibrant-gradient-wallpaper-delightful-pastel-abstract-texture-with-a-touch-of-image_13598930.png' %>"
          alt="<%= category.name %>"
          class="w-full h-32 object-cover opacity-30"
        />
        <div class="absolute inset-0 p-4 flex items-center justify-between">
          <h3 class="text-black font-semibold text-lg"><%= category.name %></h3>
        </div>
      </div>

      <!-- Subcategories -->
      <div
        id="subcategories-<%= category._id %>"
        class="hidden mt-2 bg-gray-100 rounded-lg p-4"
      >
        <!-- Add subcategory form -->
        <form
          onsubmit="addSubCategory(event, '<%= category._id %>')"
          class="flex gap-2 mb-3"
        >
          <input
            type="text"
            placeholder="Thêm chuyên mục con"
            class="flex-1 px-3 py-1 text-sm border rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          />
          <button
            type="submit"
            class="px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600"
          >
            +
          </button>
        </form>

        <!-- Subcategories list -->
        <div class="space-y-2">
          <% category.subCategories.forEach(sub => { %>
          <div class="flex items-center justify-between bg-white p-2 rounded">
            <span class="text-sm"><%= sub.name %></span>
            <button
              onclick="deleteSubCategory('<%= category._id %>', '<%= sub._id %>')"
              class="p-1 hover:bg-gray-100 rounded"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4 text-gray-500"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                  clip-rule="evenodd"
                />
              </svg>
            </button>
          </div>
          <% }) %>
        </div>
      </div>
    </div>
    <% } else { %>
    <div class="category-card" data-category-id="<%= category._id %>">
      <!-- Category Card -->
      <div
        class="relative rounded-lg overflow-hidden bg-gradient-to-r from-orange-400 to-pink-500"
      >
        <img
          src="<%= category.image || 'https://png.pngtree.com/thumb_back/fw800/background/20231010/pngtree-vibrant-gradient-wallpaper-delightful-pastel-abstract-texture-with-a-touch-of-image_13598930.png' %>"
          alt="<%= category.name %>"
          class="w-full h-32 object-cover opacity-30"
        />
        <div class="absolute inset-0 p-4 flex items-center justify-between">
          <h3 class="text-black font-semibold text-lg"><%= category.name %></h3>
          <div class="flex gap-2">
            <button
              onclick="toggleSubCategories('<%= category._id %>')"
              class="p-2 rounded-full bg-white/20 hover:bg-white/30"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-white"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z"
                />
              </svg>
            </button>
            <button
              onclick="editCategory('<%= category._id %>', '<%= category.name %>')"
              class="p-2 rounded-full bg-white/20 hover:bg-white/30"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="hh-5 w-5 text-white"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M12.293 2.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-7 7a1 1 0 01-.707.293H7.414a1 1 0 01-.707-.293l-4-4a1 1 0 010-1.414l7-7a1 1 0 011.414 0l.707.707z"
                  clip-rule="evenodd"
                />
              </svg>
            </button>
            <button
              onclick="deleteCategory('<%= category._id %>')"
              class="p-2 rounded-full bg-white/20 hover:bg-white/30"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-white"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                  clip-rule="evenodd"
                />
              </svg>
            </button>
          </div>
        </div>
      </div>

      <!-- Subcategories -->
      <div
        id="subcategories-<%= category._id %>"
        class="hidden mt-2 bg-gray-100 rounded-lg p-4"
      >
        <!-- Add subcategory form -->
        <form
          onsubmit="addSubCategory(event, '<%= category._id %>')"
          class="flex gap-2 mb-3"
        >
          <input
            type="text"
            placeholder="Thêm chuyên mục con"
            class="flex-1 px-3 py-1 text-sm border rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          />
          <button
            type="submit"
            class="px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600"
          >
            +
          </button>
        </form>

        <!-- Subcategories list -->
        <div class="space-y-2">
          <% category.subCategories.forEach(sub => { %>
          <div class="flex items-center justify-between bg-white p-2 rounded">
            <span class="text-sm"><%= sub.name %></span>
            <button
              onclick="deleteSubCategory('<%= category._id %>', '<%= sub._id %>')"
              class="p-1 hover:bg-gray-100 rounded"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4 text-gray-500"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                  clip-rule="evenodd"
                />
              </svg>
            </button>
          </div>
          <% }) %>
        </div>
      </div>
    </div>
    <% } %> <% }) %>
  </div>
</div>

<!-- Modal Edit Category -->
<div
  id="editCategoryModal"
  class="fixed inset-0 bg-gray-500 bg-opacity-50 flex justify-center items-center hidden"
>
  <div class="bg-white p-6 rounded-lg w-1/3">
    <h2 class="text-lg font-semibold">Chỉnh sửa tên chuyên mục</h2>
    <input
      type="text"
      id="editCategoryName"
      class="mt-2 p-2 w-full border rounded-lg"
      required
    />
    <div class="mt-4 flex justify-end gap-2">
      <button
        onclick="closeEditModal()"
        class="px-4 py-2 bg-gray-300 text-black rounded-lg"
      >
        Hủy
      </button>
      <button
        onclick="saveEditedCategory()"
        class="px-4 py-2 bg-blue-500 text-white rounded-lg"
      >
        Lưu
      </button>
    </div>
  </div>
</div>

<script>
  // Thêm category mới
  document
    .getElementById("addCategoryForm")
    .addEventListener("submit", async (e) => {
      e.preventDefault();

      const categoryName = document.getElementById("categoryName").value;

      try {
        const response = await fetch("/manage-categories/addcategory", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ name: categoryName }),
        });

        if (response.ok) {
          window.location.reload();
        } else {
          const data = await response.json();
          alert(data.error || "Có lỗi xảy ra khi thêm chuyên mục");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Có lỗi xảy ra khi thêm chuyên mục");
      }
    });

  // Toggle hiển thị subcategories
  function toggleSubCategories(categoryId) {
    const subCategoriesDiv = document.getElementById(
      `subcategories-${categoryId}`
    );
    subCategoriesDiv.classList.toggle("hidden");
  }

  // Thêm subcategory
  async function addSubCategory(event, categoryId) {
    event.preventDefault();
    const input = event.target.querySelector("input");
    const name = input.value;

    try {
      const response = await fetch(
        `/api/categories/${categoryId}/subcategories`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ name }),
        }
      );

      if (response.ok) {
        window.location.reload();
      } else {
        const data = await response.json();
        alert(data.error || "Có lỗi xảy ra khi thêm chuyên mục con");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("Có lỗi xảy ra khi thêm chuyên mục con");
    }
  }

  // Xóa category
  async function deleteCategory(categoryId) {
    if (confirm("Bạn có chắc chắn muốn xóa chuyên mục này?")) {
      try {
        const response = await fetch(`/api/categories/${categoryId}`, {
          method: "DELETE",
        });

        if (response.ok) {
          window.location.reload();
        } else {
          const data = await response.json();
          alert(data.error || "Có lỗi xảy ra khi xóa chuyên mục");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Có lỗi xảy ra khi xóa chuyên mục");
      }
    }
  }

  // Xóa subcategory
  async function deleteSubCategory(categoryId, subCategoryId) {
    if (confirm("Bạn có chắc chắn muốn xóa chuyên mục con này?")) {
      try {
        const response = await fetch(
          `/api/categories/${categoryId}/subcategories/${subCategoryId}`,
          {
            method: "DELETE",
          }
        );

        if (response.ok) {
          window.location.reload();
        } else {
          const data = await response.json();
          alert(data.error || "Có lỗi xảy ra khi xóa chuyên mục con");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Có lỗi xảy ra khi xóa chuyên mục con");
      }
    }
  }

  function editCategory(categoryId, categoryName) {
    const modal = document.getElementById("editCategoryModal");
    modal.classList.remove("hidden");
    document.getElementById("editCategoryName").value = categoryName;
    window.editCategoryId = categoryId;
  }

  function editSubCategory(categoryId ,subcategoryId, subcategoryName) {
    const modal = document.getElementById("editCategoryModal");
    modal.classList.remove("hidden");
    document.getElementById("editCategoryName").value = subcategoryName;
    window.editCategoryId = subcategoryId;
  }

  function closeEditModal() {
    document.getElementById("editCategoryModal").classList.add("hidden");
  }

  async function saveEditedCategory() {
    const categoryName = document.getElementById("editCategoryName").value;
    const categoryId = window.editCategoryId;

    try {
      const response = await fetch(`/edit-category/${categoryId}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name: categoryName }),
      });

      if (response.ok) {
        const updatedCategory = await response.json();
        updateCategoryOnPage(updatedCategory.data);
        closeEditModal(); // Đóng modal sau khi cập nhật thành công
      } else {
        const data = await response.json();
        alert(
          data.error || `Lỗi ${response.status}: Không thể hoàn thành yêu cầu.`
        );
      }
    } catch (error) {
      console.error("Error:", error);
      alert("Có lỗi xảy ra khi chỉnh sửa chuyên mục");
    }
  }

  function updateCategoryOnPage(category) {
    // Tìm category card cần cập nhật dựa trên categoryId
    const categoryCard = document.querySelector(
      `.category-card[data-category-id="${category._id}"]`
    );

    // Cập nhật tên category trong category card
    const categoryNameElement = categoryCard.querySelector("h3");
    categoryNameElement.textContent = category.name;
  }
</script>
